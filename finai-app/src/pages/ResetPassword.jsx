/*
Archivo: src/pages/ResetPassword.jsx
Prop칩sito: Componente para la p치gina donde el usuario introduce su nueva
           contrase침a despu칠s de hacer clic en el enlace de restablecimiento.
*/
import React, { useState, useEffect, useCallback } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { supabase } from '../services/supabaseClient'; // Aseg칰rate que la ruta sea correcta

function ResetPassword() {
    // --- Estado del Componente ---
    const [newPassword, setNewPassword] = useState('');
    const [message, setMessage] = useState('');
    const [messageType, setMessageType] = useState(''); // 'success' o 'error'
    const [isLoading, setIsLoading] = useState(false);
    const [isPasswordUpdated, setIsPasswordUpdated] = useState(false); // Para evitar doble submit y controlar UI

    const navigate = useNavigate();

    // --- Efectos ---
    useEffect(() => {
        // No es necesario manejar el token aqu칤 directamente.
        // Se asume que un listener global onAuthStateChange ya ha procesado
        // el token de recuperaci칩n de la URL (#access_token=...) y ha establecido
        // una sesi칩n temporal cuando el usuario llega a esta p치gina.
        console.log("Componente ResetPassword montado. Listo para actualizar contrase침a.");

        // Opcional: Comprobar si hay un error expl칤cito en la URL (menos com칰n con Supabase V2)
        const hash = window.location.hash.substring(1);
        const params = new URLSearchParams(hash);
        const errorDescription = params.get('error_description');
        if (errorDescription) {
            setMessage(`Error: ${errorDescription}`);
            setMessageType('error');
            setIsPasswordUpdated(true); // Bloquear formulario si hay error inicial
        }

    }, []); // Solo al montar

    // --- Manejadores de Eventos ---
    const handlePasswordChange = (event) => {
        setNewPassword(event.target.value);
        if (message) setMessage(''); // Limpiar mensaje al escribir
    };

    const handleSubmit = useCallback(async (event) => {
        event.preventDefault();
        if (isLoading || isPasswordUpdated) return; // Evitar doble submit o si ya se actualiz칩/hubo error inicial

        setMessage('');
        setMessageType('');
        setIsLoading(true);

        // Validaci칩n b치sica de longitud
        if (newPassword.length < 8) { // Ajusta la longitud m칤nima seg칰n tus requisitos
            setMessage('La contrase침a debe tener al menos 8 caracteres.');
            setMessageType('error');
            setIsLoading(false);
            return;
        }

        try {
            console.log('Intentando actualizar contrase침a con supabase.auth.updateUser...');
            // Llamar a updateUser. Supabase utiliza la sesi칩n activa
            // establecida por el listener onAuthStateChange al procesar el token.
            const { data, error } = await supabase.auth.updateUser({
                password: newPassword
            });

            if (error) {
                // Manejar errores comunes de Supabase
                if (error.message.includes("Password should be at least 6 characters")) {
                     setMessage('La contrase침a es demasiado corta (m칤nimo 6 caracteres seg칰n Supabase).');
                } else if (error.message.includes("same as the old password")) {
                    setMessage('La nueva contrase침a no puede ser igual a la anterior.');
                } else if (error.message.includes("Auth session missing")) {
                     setMessage('Sesi칩n inv치lida o expirada. Solicita restablecer la contrase침a de nuevo.');
                } else {
                    throw error; // Re-lanzar otros errores
                }
                setMessageType('error');
            } else {
                // 칄xito
                console.log('Contrase침a actualizada con 칠xito:', data);
                setMessage('춰Contrase침a actualizada con 칠xito! Redirigiendo al login...');
                setMessageType('success');
                setNewPassword(''); // Limpiar input
                setIsPasswordUpdated(true); // Marcar como actualizada para bloquear formulario

                // Redirigir al login despu칠s de un tiempo
                setTimeout(() => {
                    navigate('/login'); // Usa tu ruta de login
                }, 3000); // 3 segundos de retraso
            }

        } catch (error) {
            console.error('Error al actualizar contrase침a:', error);
            // Mostrar mensaje gen칠rico o el mensaje de error espec칤fico si no se manej칩 antes
            if (!message) { // Solo si no se estableci칩 un mensaje de error m치s espec칤fico arriba
                 setMessage(error.message || 'Error al actualizar la contrase침a. Int칠ntalo de nuevo.');
                 setMessageType('error');
            }
        } finally {
            setIsLoading(false);
        }
    }, [isLoading, isPasswordUpdated, newPassword, navigate, message]); // A침adir message a dependencias para evitar re-lanzar error

    // --- Renderizado ---
    return (
        <div className="background-container"> {/* Aseg칰rate que esta clase exista y centre el contenido */}
            <div className="reset-container"> {/* O usa la clase de 'Login.css' si es similar */}
                <h1>Restablecer Contrase침a</h1>
                <p>Introduce una nueva contrase침a para tu cuenta.</p>

                <form id="reset-password-form" onSubmit={handleSubmit}>
                    <div className="input-wrapper">
                        <span className="input-icon lock-icon" role="img" aria-label="lock">游댐</span> {/* Cambiado a llave */}
                        <input
                            type="password"
                            id="new-password"
                            placeholder="Nueva contrase침a (m칤n. 8 caracteres)"
                            value={newPassword}
                            onChange={handlePasswordChange}
                            required
                            minLength="8" // A침adir validaci칩n HTML b치sica
                            disabled={isLoading || isPasswordUpdated} // Deshabilitar si carga o ya se actualiz칩
                        />
                    </div>

                    <button
                        type="submit"
                        id="reset-button"
                        disabled={isLoading || isPasswordUpdated || newPassword.length < 8} // Deshabilitar si carga, actualizado o contrase침a corta
                    >
                        {isLoading ? 'Restableciendo...' : 'Restablecer Contrase침a'}
                    </button>
                </form>

                {message && (
                    <p
                        id="message"
                        className={`message ${messageType === 'error' ? 'error-message' : 'success-message'}`}
                    >
                        {message}
                    </p>
                )}

                {/* Mostrar enlace a login solo si la contrase침a ya se actualiz칩 o hubo error inicial */}
                {(isPasswordUpdated || messageType === 'error') && (
                     <Link to="/login" className="return-link" style={{marginTop: '15px'}}>Volver al Login</Link>
                )}
            </div>
        </div>
    );
}

export default ResetPassword;
